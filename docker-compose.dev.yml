version: "3.3"

services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:9000"
    ports:
      - "9000:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  db:
    image: postgres:latest
    volumes:
      - "${DB_DIR}:/var/lib/postgresql/data:rw"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  migration:
    build: .
    image: app
    command: bash -c "
        pipenv run python unionGov/manage.py makemigrations
        && pipenv run python unionGov/manage.py migrate
        && pipenv run python unionGov/manage.py loaddata --app gov default"
    volumes:
      - .:/code
    environment:
      - DEBUG=True
      - API_HOST=localhost
    links:
      - db
    depends_on: 
      - db
  api:
    image: app
    command: pipenv run python unionGov/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    environment:
      - DEBUG=True
      - API_HOST=localhost
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bweb.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.bweb.entrypoints=web"
    links:
      - db
    depends_on:
      - migration

  front:
    build: frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    environment:
      - API_HOST=localhost
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fweb.rule=Host(`localhost`)"
      - "traefik.http.routers.fweb.entrypoints=web"

